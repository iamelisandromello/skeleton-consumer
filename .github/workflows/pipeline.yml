name: Dynamic Lambda Deployment

on:
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PROJECT_NAME: my-lambda
  ENVIRONMENT: staging
  S3_BUCKET_NAME: my-shared-lambdas-bucket
  TERRAFORM_PATH: terraform

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # -------------------------------
      # üßæ CHECKOUT Application
      # -------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------------
      # ‚öôÔ∏è CHECKOUT Terraform Template
      # -------------------------------            

      - name: Checkout Terraform template
        uses: actions/checkout@v4
        with:
          repository: iamelisandromello/skeleton-terraform-template
          path: terraform
          token: ${{ secrets.GITHUB_TOKEN }}

      # -------------------------------
      # ‚öôÔ∏è DEBUG: Verificar estrutura e conte√∫do do Terraform Template
      # ADICIONADO PARA DEBUG
      # -------------------------------
      - name: Debug - Verificar estrutura e conte√∫do do Terraform Template
        run: |
          echo "üìÇ Listando arquivos e diret√≥rios recursivamente em 'terraform/'"
          ls -R terraform/ || echo "‚ùå Diret√≥rio 'terraform/' n√£o encontrado ou vazio."
          echo "---"

          echo "üìÑ Conte√∫do de terraform/main.tf (se existir):"
          cat terraform/main.tf 2>/dev/null || echo "‚ùå terraform/main.tf n√£o encontrado ou vazio."
          echo "---"

          echo "üìÑ Conte√∫do de terraform/variables.tf (se existir):"
          cat terraform/variables.tf 2>/dev/null || echo "‚ùå terraform/variables.tf n√£o encontrado ou vazio."
          echo "---"

          echo "üìÑ Conte√∫do de terraform/providers.tf (se existir):"
          cat terraform/providers.tf 2>/dev/null || echo "‚ùå terraform/providers.tf n√£o encontrado ou vazio."
          echo "---"

          echo "üìÑ Conte√∫do de terraform/modules/sqs/main.tf (se existir, caminho ajust√°vel):"
          cat terraform/modules/sqs/main.tf 2>/dev/null || echo "‚ùå terraform/modules/sqs/main.tf n√£o encontrado ou vazio. Verifique o caminho correto do m√≥dulo SQS."
          echo "---"

          echo "üìÑ Conte√∫do de terraform/terraform.auto.tfvars.json (se existir):"
          cat terraform/terraform.auto.tfvars.json 2>/dev/null || echo "‚ùå Arquivo terraform.auto.tfvars.json n√£o encontrado."
          echo "---"


      # -------------------------------
      # ‚öôÔ∏è SETUP NODE & VARS
      # -------------------------------        
      - name: Setup Node.js and Env Vars
        uses: iamelisandromello/skeleton-pipeline-template/setup-node@main
        with:
          node_version: '20'

      # -------------------------------
      # üîß BUILD & PACKAGE LAMBDA
      # -------------------------------          
      - name: Install & Build
        uses: iamelisandromello/skeleton-pipeline-template/build-package@main
        with:
          project_name: ${{ env.PROJECT_NAME }}

      # -------------------------------
      # üîÑ UPLOAD LAMBDA TO S3
      # -------------------------------        
      - name: Upload Lambda to S3
        uses: iamelisandromello/skeleton-pipeline-template/upload-to-s3@main
        with:
          global_env_vars_json: ${{ secrets.GLOBAL_ENV_VARS_JSON }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          project_name: ${{ env.PROJECT_NAME }}

      # -------------------------------
      # ‚öôÔ∏è TERRAFORM SETUP & TFVARS
      # -------------------------------          
      - name: Setup Terraform
        uses: iamelisandromello/skeleton-pipeline-template/setup-terraform@main
        with:
          terraform_version: '1.5.6'
          environment: ${{ env.ENVIRONMENT }}
          project_name: ${{ env.PROJECT_NAME }}
          s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # -------------------------------
      # üîÑ GENERATE TVARS
      # -------------------------------          
      - name: Generate tfvars
        uses: iamelisandromello/skeleton-pipeline-template/generate-tfvars@main
        with:
          ENVIRONMENTS: ${{ secrets.ENVIRONMENTS }}
          GLOBAL_ENV_VARS_JSON: ${{ secrets.GLOBAL_ENV_VARS_JSON }}
          s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}

      # O debug anterior de tfvars foi substitu√≠do e aprimorado acima.
      # Removi o passo de debug antigo para evitar redund√¢ncia, mas mantive o conte√∫do de terraform.auto.tfvars.json.
      
      # -------------------------------
      # üîÑ IMPORT, VALIDATE & APPLY TERRAFORM
      # -------------------------------    
      - name: Importar recursos existentes
        uses: iamelisandromello/skeleton-pipeline-template/import-resources@main
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          project_name: ${{ env.PROJECT_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          terraform_path: ${{ env.TERRAFORM_PATH }}

      - name: Validar Terraform
        uses: iamelisandromello/skeleton-pipeline-template/validate-terraform@main
        with:
          terraform_path: ${{ env.TERRAFORM_PATH }}

      - name: Terraform Plan and Apply
        uses: iamelisandromello/skeleton-pipeline-template/plan-apply-terraform@main
        with:
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          S3_BUCKET_NAME: ${{ env.S3_BUCKET_NAME }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GLOBAL_ENV_VARS_JSON: ${{ secrets.GLOBAL_ENV_VARS_JSON }}
          ENVIRONMENTS_JSON: ${{ secrets.ENVIRONMENTS }}
          terraform_path: ${{ env.TERRAFORM_PATH }}
